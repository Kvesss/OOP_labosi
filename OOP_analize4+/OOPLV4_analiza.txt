//1.zad


#include <iostream>
#include <ctime>
#include <cstdlib>
using namespace std;

template<typename tip>
tip Max(tip arr[], int n){
    tip max=arr[0];
    for(int i=1;i<n;i++){
        if(arr[i]>max)
            max=arr[i];
    }
    return max;
}

template<typename tip>
tip Min(tip arr[], int n){
    tip min=arr[0];
    for(int i=1;i<n;i++){
        if(arr[i]<min)
            min=arr[i];
    }
    return min;
}



int main()
{   
    srand((unsigned)time(NULL));
    int* intovi=new int[5];
    double* doblovi=new double[5];
    char* charovi=new char[5];
    for(int i=0;i<5;i++){
        intovi[i]=rand()%10;
        doblovi[i]=(double)rand()/RAND_MAX*10;
        charovi[i]=65+rand()%26;
    }
    /*int intovi[5]={2,4,3,1,5};
    double doblovi[5]={3.3,6.5,0.8,2.2,7.1};
    char charovi[5]={'a','z','s','t','g'};*/
    cout<<Min(intovi,5)<<"\t"<<Max(intovi, 5)<<endl;
    cout<<Min(doblovi,5)<<"\t"<<Max(doblovi, 5)<<endl;    
    cout<<Min(charovi,5)<<"\t"<<Max(charovi, 5)<<endl;
    delete[] intovi;
    delete[] doblovi;
    delete[] charovi;

    return 0;
}



//2.zad

#include <iostream>
#include <ctime>
#include <cstdlib>
using namespace std;





template<typename tip>
class UredeniPar{
    tip* prvi;
    tip* drugi;
public:
    UredeniPar():prvi(new tip()),drugi(new tip()){}
    UredeniPar(tip a, tip b):prvi(new tip(a)),drugi(new tip(b)){}
    UredeniPar(const UredeniPar& copy){
        prvi=new tip();
        drugi=new tip();
        prvi=copy.prvi;
        drugi=copy.drugi;
    }
    ~UredeniPar(){
        delete prvi;
        delete drugi;
    }
    
    UredeniPar& operator=(const UredeniPar& ref){
        if(this!= &ref){
            /*delete prvi;
            delete drugi;*/
            prvi=ref.prvi;
            drugi=ref.drugi;
            
        }
        return *this;
    }
    friend bool operator==(const UredeniPar& p1, const UredeniPar& p2){
        return(p1.prvi==p2.prvi && p1.drugi==p2.drugi);
    }
    friend bool operator!=(const UredeniPar& p1, const UredeniPar& p2){
        return !(p1==p2);
    }
    tip getPrvi()const{
        return prvi;
    }
    tip getDrugi()const{
        return drugi;
    }
};




int main(){
    UredeniPar<int> int1(5,7);
    UredeniPar<int> int2(3,2);
    UredeniPar<double> double1(2.2,3.3);
    UredeniPar<double> double2(double1);
    UredeniPar<char> char1('d','k');
    UredeniPar<char> char2('z','k');
    if(int1==int2)
        cout<<"Uredeni parovi intova jednaki su."<<endl;
    else
        cout<<"Uredeni parovi intova nisu jednaki"<<endl;
        
    if(double1==double2)
        cout<<"Uredeni parovi double jednaki su."<<endl;
    else
        cout<<"Uredeni parovi double nisu jednaki"<<endl;
        
    if(char1==char2)
        cout<<"Uredeni parovi charova jednaki su."<<endl;
    else
        cout<<"Uredeni parovi charova nisu jednaki"<<endl;
    
    cout<<&double1<<"\t"<<&double2<<endl;
    
    int1=int2;
    if(int1==int2)
        cout<<"Uredeni parovi intova jednaki su."<<endl;
    else
        cout<<"Uredeni parovi intova nisu jednaki"<<endl;
    
    return 0;
}












